apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  labels:
    app: {{ .Values.deployment.name }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.deployment.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.deployment.name }}
    spec:
      containers:
        - name: {{ .Values.deployment.name }}
          image: "{{ .Values.deployment.image }}:{{ .Values.deployment.tag }}"
          imagePullPolicy: Always
          ports:
          - containerPort : {{ .Values.deployment.port }}
          envFrom:
              - configMapRef:
                    name: "{{ .Values.deployment.name }}-config"
          volumeMounts:
            - name: secrets
              mountPath: "/app/secrets"
              readOnly: true 
          env:
            - name: {{ .Values.deployment.name }}
              value: myapp/{{ .Values.deployment.env }}              
      volumes:
        - name: secrets
          secret:
            secretName: env
            items:
            - key: flask
              path: myapp/{{ .Values.deployment.env }}